// Define any SCSS mixins

@mixin flex-center {
  @include flex;
  @include flex-justify(center);
  @include flex-align(center);
}

@mixin flex {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin inline-flex {
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
}

@mixin flex-width($width) {
  -webkit-box-flex: $width;   /* OLD - iOS 6-, Safari 3.1-6 */
  -webkit-flex: $width;       /* Safari 6.1+. iOS 7.1+, BB10 */
  -ms-flex: $width;           /* IE 10 */
  flex: $width;  
}

@mixin flex-align($position) {
  -webkit-box-align: $position; 
  -moz-box-align: $position;
  -ms-flex-align: $position;
  -webkit-align-items: $position;
  align-items: $position;  
}

@mixin flex-align-content($position) {
  -webkit-align-content: $position;  
  align-content: $position;  
}

@mixin flex-justify($position) {
  -webkit-box-pack: $position;
  -moz-box-pack: $position;
  -ms-flex-pack: $position;
  -webkit-justify-content: $position;
  justify-content: $position;
}

@mixin flex-flow($flow){
  -webkit-flex-flow: $flow;
  flex-flow: $flow;
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@mixin background-gradient($top-left, $bottom-right){
  background: -webkit-linear-gradient(90deg, $top-left 10%, $bottom-right 90%); /* Chrome 10+, Saf5.1+ */
  background:    -moz-linear-gradient(90deg, $top-left 10%, $bottom-right 90%); /* FF3.6+ */
  background:     -ms-linear-gradient(90deg, $top-left 10%, $bottom-right 90%); /* IE10 */
  background:      -o-linear-gradient(90deg, $top-left 10%, $bottom-right 90%); /* Opera 11.10+ */
  background:         linear-gradient(90deg, $top-left 10%, $bottom-right 90%); /* W3C */
}

@mixin card($max-width) {
  max-width: $max-width;
  margin: 0 auto 8px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  padding: 16px;
  border-radius: $border-radius;
  text-align: center;
  display: block;
  color: #222;
  text-decoration: none;
}

@mixin button($bg-color, $fg-color: #fff, $font-size: 1rem) {
  text-decoration: none;
  color: $fg-color;
  padding: 8px 16px;
  font-size: $font-size;
  margin: 0;
  display: inline-block;
  background: $bg-color;
  border: none;
  outline: none;
  cursor: pointer;
  border-radius: 4px;
  -webkit-appearance: none;
  @include transition(background 50ms ease-in-out);
  &:hover {
    background: darken($bg-color, 8%)
  }
  &:before {
    padding-right: 8px;
  }
}

@mixin placeholder-color($color) {
  ::-webkit-input-placeholder {
    color: $color;
  }

  :-moz-placeholder { /* Firefox 18- */
     color: $color;  
  }

  ::-moz-placeholder {  /* Firefox 19+ */
     color: $color;  
  }

  :-ms-input-placeholder {  
     color: $color;  
  }
}

// Execute the CSS only in a particular breakpoint
// include @breakpoint(xs) { ... }
@mixin breakpoint($size) {
  @if $size == xs {
    @media(max-width: $screen-xs-max) { @content ; }
  } @else if $size == sm {
    @media(max-width: $screen-sm-max) { @content ; }
  } @else if $size == md {
    @media(max-width: $screen-md-max) { @content ; }
  } @else if $size == lg {
    @media(max-width: $screen-lg-max) { @content ; }
  }
}

@mixin cols($xs: 12, $sm: 12, $md: 12, $lg: 12) {
  @include make-xs-column($xs);
  @include make-sm-column($sm);
  @include make-md-column($md);
  @include make-lg-column($lg);
}

@mixin offsets($xs: 0, $sm: 0, $md: 0, $lg: 0) {
  @include make-xs-column-offset($xs);
  @include make-sm-column-offset($sm);
  @include make-md-column-offset($md);
  @include make-lg-column-offset($lg);
}
